#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CloudGameR
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CloudGameR")]
	public partial class CloudGameR_DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAluguer(Aluguer instance);
    partial void UpdateAluguer(Aluguer instance);
    partial void DeleteAluguer(Aluguer instance);
    partial void InsertUtilizador(Utilizador instance);
    partial void UpdateUtilizador(Utilizador instance);
    partial void DeleteUtilizador(Utilizador instance);
    partial void InsertAquisicao(Aquisicao instance);
    partial void UpdateAquisicao(Aquisicao instance);
    partial void DeleteAquisicao(Aquisicao instance);
    partial void InsertContacto(Contacto instance);
    partial void UpdateContacto(Contacto instance);
    partial void DeleteContacto(Contacto instance);
    partial void InsertCriadora(Criadora instance);
    partial void UpdateCriadora(Criadora instance);
    partial void DeleteCriadora(Criadora instance);
    partial void InsertEditora(Editora instance);
    partial void UpdateEditora(Editora instance);
    partial void DeleteEditora(Editora instance);
    partial void InsertFactura(Factura instance);
    partial void UpdateFactura(Factura instance);
    partial void DeleteFactura(Factura instance);
    partial void InsertGenero(Genero instance);
    partial void UpdateGenero(Genero instance);
    partial void DeleteGenero(Genero instance);
    partial void InsertIdioma(Idioma instance);
    partial void UpdateIdioma(Idioma instance);
    partial void DeleteIdioma(Idioma instance);
    partial void InsertIdiomaJogo(IdiomaJogo instance);
    partial void UpdateIdiomaJogo(IdiomaJogo instance);
    partial void DeleteIdiomaJogo(IdiomaJogo instance);
    partial void InsertImagem(Imagem instance);
    partial void UpdateImagem(Imagem instance);
    partial void DeleteImagem(Imagem instance);
    partial void InsertIVA(IVA instance);
    partial void UpdateIVA(IVA instance);
    partial void DeleteIVA(IVA instance);
    partial void InsertJogo(Jogo instance);
    partial void UpdateJogo(Jogo instance);
    partial void DeleteJogo(Jogo instance);
    partial void InsertPai(Pai instance);
    partial void UpdatePai(Pai instance);
    partial void DeletePai(Pai instance);
    partial void InsertPreferencia(Preferencia instance);
    partial void UpdatePreferencia(Preferencia instance);
    partial void DeletePreferencia(Preferencia instance);
    partial void InsertRate(Rate instance);
    partial void UpdateRate(Rate instance);
    partial void DeleteRate(Rate instance);
    partial void InsertRegistoUtilizacao(RegistoUtilizacao instance);
    partial void UpdateRegistoUtilizacao(RegistoUtilizacao instance);
    partial void DeleteRegistoUtilizacao(RegistoUtilizacao instance);
    partial void InsertTipoAquisicao(TipoAquisicao instance);
    partial void UpdateTipoAquisicao(TipoAquisicao instance);
    partial void DeleteTipoAquisicao(TipoAquisicao instance);
    partial void InsertTipoContacto(TipoContacto instance);
    partial void UpdateTipoContacto(TipoContacto instance);
    partial void DeleteTipoContacto(TipoContacto instance);
    #endregion
		
		public CloudGameR_DBDataContext() : 
				base(global::CloudGameR.Properties.Settings.Default.CloudGameRConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CloudGameR_DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CloudGameR_DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CloudGameR_DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CloudGameR_DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Aluguer> Aluguers
		{
			get
			{
				return this.GetTable<Aluguer>();
			}
		}
		
		public System.Data.Linq.Table<Utilizador> Utilizadors
		{
			get
			{
				return this.GetTable<Utilizador>();
			}
		}
		
		public System.Data.Linq.Table<Aquisicao> Aquisicaos
		{
			get
			{
				return this.GetTable<Aquisicao>();
			}
		}
		
		public System.Data.Linq.Table<Contacto> Contactos
		{
			get
			{
				return this.GetTable<Contacto>();
			}
		}
		
		public System.Data.Linq.Table<Criadora> Criadoras
		{
			get
			{
				return this.GetTable<Criadora>();
			}
		}
		
		public System.Data.Linq.Table<Editora> Editoras
		{
			get
			{
				return this.GetTable<Editora>();
			}
		}
		
		public System.Data.Linq.Table<Factura> Facturas
		{
			get
			{
				return this.GetTable<Factura>();
			}
		}
		
		public System.Data.Linq.Table<Genero> Generos
		{
			get
			{
				return this.GetTable<Genero>();
			}
		}
		
		public System.Data.Linq.Table<Idioma> Idiomas
		{
			get
			{
				return this.GetTable<Idioma>();
			}
		}
		
		public System.Data.Linq.Table<IdiomaJogo> IdiomaJogos
		{
			get
			{
				return this.GetTable<IdiomaJogo>();
			}
		}
		
		public System.Data.Linq.Table<Imagem> Imagems
		{
			get
			{
				return this.GetTable<Imagem>();
			}
		}
		
		public System.Data.Linq.Table<IVA> IVAs
		{
			get
			{
				return this.GetTable<IVA>();
			}
		}
		
		public System.Data.Linq.Table<Jogo> Jogos
		{
			get
			{
				return this.GetTable<Jogo>();
			}
		}
		
		public System.Data.Linq.Table<Pai> Pais
		{
			get
			{
				return this.GetTable<Pai>();
			}
		}
		
		public System.Data.Linq.Table<Preferencia> Preferencias
		{
			get
			{
				return this.GetTable<Preferencia>();
			}
		}
		
		public System.Data.Linq.Table<Rate> Rates
		{
			get
			{
				return this.GetTable<Rate>();
			}
		}
		
		public System.Data.Linq.Table<RegistoUtilizacao> RegistoUtilizacaos
		{
			get
			{
				return this.GetTable<RegistoUtilizacao>();
			}
		}
		
		public System.Data.Linq.Table<TipoAquisicao> TipoAquisicaos
		{
			get
			{
				return this.GetTable<TipoAquisicao>();
			}
		}
		
		public System.Data.Linq.Table<TipoContacto> TipoContactos
		{
			get
			{
				return this.GetTable<TipoContacto>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aluguer")]
	public partial class Aluguer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TempoAdquirido;
		
		private System.DateTime _Validade;
		
		private bool _Activo;
		
		private int _Aquisicao_ID;
		
		private int _Aluguer_ID;
		
		private EntityRef<Aquisicao> _Aquisicao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTempoAdquiridoChanging(int value);
    partial void OnTempoAdquiridoChanged();
    partial void OnValidadeChanging(System.DateTime value);
    partial void OnValidadeChanged();
    partial void OnActivoChanging(bool value);
    partial void OnActivoChanged();
    partial void OnAquisicao_IDChanging(int value);
    partial void OnAquisicao_IDChanged();
    partial void OnAluguer_IDChanging(int value);
    partial void OnAluguer_IDChanged();
    #endregion
		
		public Aluguer()
		{
			this._Aquisicao = default(EntityRef<Aquisicao>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempoAdquirido", DbType="Int NOT NULL")]
		public int TempoAdquirido
		{
			get
			{
				return this._TempoAdquirido;
			}
			set
			{
				if ((this._TempoAdquirido != value))
				{
					this.OnTempoAdquiridoChanging(value);
					this.SendPropertyChanging();
					this._TempoAdquirido = value;
					this.SendPropertyChanged("TempoAdquirido");
					this.OnTempoAdquiridoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Validade", DbType="DateTime NOT NULL")]
		public System.DateTime Validade
		{
			get
			{
				return this._Validade;
			}
			set
			{
				if ((this._Validade != value))
				{
					this.OnValidadeChanging(value);
					this.SendPropertyChanging();
					this._Validade = value;
					this.SendPropertyChanged("Validade");
					this.OnValidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit NOT NULL")]
		public bool Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aquisicao_ID", DbType="Int NOT NULL")]
		public int Aquisicao_ID
		{
			get
			{
				return this._Aquisicao_ID;
			}
			set
			{
				if ((this._Aquisicao_ID != value))
				{
					if (this._Aquisicao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAquisicao_IDChanging(value);
					this.SendPropertyChanging();
					this._Aquisicao_ID = value;
					this.SendPropertyChanged("Aquisicao_ID");
					this.OnAquisicao_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aluguer_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Aluguer_ID
		{
			get
			{
				return this._Aluguer_ID;
			}
			set
			{
				if ((this._Aluguer_ID != value))
				{
					this.OnAluguer_IDChanging(value);
					this.SendPropertyChanging();
					this._Aluguer_ID = value;
					this.SendPropertyChanged("Aluguer_ID");
					this.OnAluguer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aquisicao_Aluguer", Storage="_Aquisicao", ThisKey="Aquisicao_ID", OtherKey="Aquisicao_ID", IsForeignKey=true)]
		public Aquisicao Aquisicao
		{
			get
			{
				return this._Aquisicao.Entity;
			}
			set
			{
				Aquisicao previousValue = this._Aquisicao.Entity;
				if (((previousValue != value) 
							|| (this._Aquisicao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aquisicao.Entity = null;
						previousValue.Aluguers.Remove(this);
					}
					this._Aquisicao.Entity = value;
					if ((value != null))
					{
						value.Aluguers.Add(this);
						this._Aquisicao_ID = value.Aquisicao_ID;
					}
					else
					{
						this._Aquisicao_ID = default(int);
					}
					this.SendPropertyChanged("Aquisicao");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilizador")]
	public partial class Utilizador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_ID;
		
		private string _Username;
		
		private string _Pass;
		
		private string _Nome;
		
		private string _Morada;
		
		private string _Referral;
		
		private int _Pais_ID;
		
		private EntitySet<Aquisicao> _Aquisicaos;
		
		private EntitySet<Contacto> _Contactos;
		
		private EntitySet<Preferencia> _Preferencias;
		
		private EntityRef<Pai> _Pai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnMoradaChanging(string value);
    partial void OnMoradaChanged();
    partial void OnReferralChanging(string value);
    partial void OnReferralChanged();
    partial void OnPais_IDChanging(int value);
    partial void OnPais_IDChanged();
    #endregion
		
		public Utilizador()
		{
			this._Aquisicaos = new EntitySet<Aquisicao>(new Action<Aquisicao>(this.attach_Aquisicaos), new Action<Aquisicao>(this.detach_Aquisicaos));
			this._Contactos = new EntitySet<Contacto>(new Action<Contacto>(this.attach_Contactos), new Action<Contacto>(this.detach_Contactos));
			this._Preferencias = new EntitySet<Preferencia>(new Action<Preferencia>(this.attach_Preferencias), new Action<Preferencia>(this.detach_Preferencias));
			this._Pai = default(EntityRef<Pai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Morada", DbType="NVarChar(50)")]
		public string Morada
		{
			get
			{
				return this._Morada;
			}
			set
			{
				if ((this._Morada != value))
				{
					this.OnMoradaChanging(value);
					this.SendPropertyChanging();
					this._Morada = value;
					this.SendPropertyChanged("Morada");
					this.OnMoradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Referral", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Referral
		{
			get
			{
				return this._Referral;
			}
			set
			{
				if ((this._Referral != value))
				{
					this.OnReferralChanging(value);
					this.SendPropertyChanging();
					this._Referral = value;
					this.SendPropertyChanged("Referral");
					this.OnReferralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais_ID", DbType="Int NOT NULL")]
		public int Pais_ID
		{
			get
			{
				return this._Pais_ID;
			}
			set
			{
				if ((this._Pais_ID != value))
				{
					if (this._Pai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPais_IDChanging(value);
					this.SendPropertyChanging();
					this._Pais_ID = value;
					this.SendPropertyChanged("Pais_ID");
					this.OnPais_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Aquisicao", Storage="_Aquisicaos", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<Aquisicao> Aquisicaos
		{
			get
			{
				return this._Aquisicaos;
			}
			set
			{
				this._Aquisicaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Contacto", Storage="_Contactos", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<Contacto> Contactos
		{
			get
			{
				return this._Contactos;
			}
			set
			{
				this._Contactos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Preferencia", Storage="_Preferencias", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<Preferencia> Preferencias
		{
			get
			{
				return this._Preferencias;
			}
			set
			{
				this._Preferencias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Utilizador", Storage="_Pai", ThisKey="Pais_ID", OtherKey="Pais_ID", IsForeignKey=true)]
		public Pai Pai
		{
			get
			{
				return this._Pai.Entity;
			}
			set
			{
				Pai previousValue = this._Pai.Entity;
				if (((previousValue != value) 
							|| (this._Pai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pai.Entity = null;
						previousValue.Utilizadors.Remove(this);
					}
					this._Pai.Entity = value;
					if ((value != null))
					{
						value.Utilizadors.Add(this);
						this._Pais_ID = value.Pais_ID;
					}
					else
					{
						this._Pais_ID = default(int);
					}
					this.SendPropertyChanged("Pai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aquisicaos(Aquisicao entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Aquisicaos(Aquisicao entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Contactos(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Contactos(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Preferencias(Preferencia entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Preferencias(Preferencia entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aquisicao")]
	public partial class Aquisicao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Aquisicao_ID;
		
		private int _User_ID;
		
		private int _Factura_ID;
		
		private double _Custo_Total;
		
		private int _Jogo_ID;
		
		private int _TipoAquisicao_ID;
		
		private EntitySet<Aluguer> _Aluguers;
		
		private EntitySet<RegistoUtilizacao> _RegistoUtilizacaos;
		
		private EntityRef<Utilizador> _Utilizador;
		
		private EntityRef<Factura> _Factura;
		
		private EntityRef<Jogo> _Jogo;
		
		private EntityRef<TipoAquisicao> _TipoAquisicao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAquisicao_IDChanging(int value);
    partial void OnAquisicao_IDChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnFactura_IDChanging(int value);
    partial void OnFactura_IDChanged();
    partial void OnCusto_TotalChanging(double value);
    partial void OnCusto_TotalChanged();
    partial void OnJogo_IDChanging(int value);
    partial void OnJogo_IDChanged();
    partial void OnTipoAquisicao_IDChanging(int value);
    partial void OnTipoAquisicao_IDChanged();
    #endregion
		
		public Aquisicao()
		{
			this._Aluguers = new EntitySet<Aluguer>(new Action<Aluguer>(this.attach_Aluguers), new Action<Aluguer>(this.detach_Aluguers));
			this._RegistoUtilizacaos = new EntitySet<RegistoUtilizacao>(new Action<RegistoUtilizacao>(this.attach_RegistoUtilizacaos), new Action<RegistoUtilizacao>(this.detach_RegistoUtilizacaos));
			this._Utilizador = default(EntityRef<Utilizador>);
			this._Factura = default(EntityRef<Factura>);
			this._Jogo = default(EntityRef<Jogo>);
			this._TipoAquisicao = default(EntityRef<TipoAquisicao>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aquisicao_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Aquisicao_ID
		{
			get
			{
				return this._Aquisicao_ID;
			}
			set
			{
				if ((this._Aquisicao_ID != value))
				{
					this.OnAquisicao_IDChanging(value);
					this.SendPropertyChanging();
					this._Aquisicao_ID = value;
					this.SendPropertyChanged("Aquisicao_ID");
					this.OnAquisicao_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL")]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factura_ID", DbType="Int NOT NULL")]
		public int Factura_ID
		{
			get
			{
				return this._Factura_ID;
			}
			set
			{
				if ((this._Factura_ID != value))
				{
					if (this._Factura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactura_IDChanging(value);
					this.SendPropertyChanging();
					this._Factura_ID = value;
					this.SendPropertyChanged("Factura_ID");
					this.OnFactura_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custo_Total", DbType="Float NOT NULL")]
		public double Custo_Total
		{
			get
			{
				return this._Custo_Total;
			}
			set
			{
				if ((this._Custo_Total != value))
				{
					this.OnCusto_TotalChanging(value);
					this.SendPropertyChanging();
					this._Custo_Total = value;
					this.SendPropertyChanged("Custo_Total");
					this.OnCusto_TotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jogo_ID", DbType="Int NOT NULL")]
		public int Jogo_ID
		{
			get
			{
				return this._Jogo_ID;
			}
			set
			{
				if ((this._Jogo_ID != value))
				{
					if (this._Jogo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJogo_IDChanging(value);
					this.SendPropertyChanging();
					this._Jogo_ID = value;
					this.SendPropertyChanged("Jogo_ID");
					this.OnJogo_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoAquisicao_ID", DbType="Int NOT NULL")]
		public int TipoAquisicao_ID
		{
			get
			{
				return this._TipoAquisicao_ID;
			}
			set
			{
				if ((this._TipoAquisicao_ID != value))
				{
					if (this._TipoAquisicao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoAquisicao_IDChanging(value);
					this.SendPropertyChanging();
					this._TipoAquisicao_ID = value;
					this.SendPropertyChanged("TipoAquisicao_ID");
					this.OnTipoAquisicao_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aquisicao_Aluguer", Storage="_Aluguers", ThisKey="Aquisicao_ID", OtherKey="Aquisicao_ID")]
		public EntitySet<Aluguer> Aluguers
		{
			get
			{
				return this._Aluguers;
			}
			set
			{
				this._Aluguers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aquisicao_RegistoUtilizacao", Storage="_RegistoUtilizacaos", ThisKey="Aquisicao_ID", OtherKey="Aquisicao_ID")]
		public EntitySet<RegistoUtilizacao> RegistoUtilizacaos
		{
			get
			{
				return this._RegistoUtilizacaos;
			}
			set
			{
				this._RegistoUtilizacaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Aquisicao", Storage="_Utilizador", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Aquisicaos.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Aquisicaos.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Aquisicao", Storage="_Factura", ThisKey="Factura_ID", OtherKey="Factura_ID", IsForeignKey=true)]
		public Factura Factura
		{
			get
			{
				return this._Factura.Entity;
			}
			set
			{
				Factura previousValue = this._Factura.Entity;
				if (((previousValue != value) 
							|| (this._Factura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Factura.Entity = null;
						previousValue.Aquisicaos.Remove(this);
					}
					this._Factura.Entity = value;
					if ((value != null))
					{
						value.Aquisicaos.Add(this);
						this._Factura_ID = value.Factura_ID;
					}
					else
					{
						this._Factura_ID = default(int);
					}
					this.SendPropertyChanged("Factura");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jogo_Aquisicao", Storage="_Jogo", ThisKey="Jogo_ID", OtherKey="Jogo_ID", IsForeignKey=true)]
		public Jogo Jogo
		{
			get
			{
				return this._Jogo.Entity;
			}
			set
			{
				Jogo previousValue = this._Jogo.Entity;
				if (((previousValue != value) 
							|| (this._Jogo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jogo.Entity = null;
						previousValue.Aquisicaos.Remove(this);
					}
					this._Jogo.Entity = value;
					if ((value != null))
					{
						value.Aquisicaos.Add(this);
						this._Jogo_ID = value.Jogo_ID;
					}
					else
					{
						this._Jogo_ID = default(int);
					}
					this.SendPropertyChanged("Jogo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAquisicao_Aquisicao", Storage="_TipoAquisicao", ThisKey="TipoAquisicao_ID", OtherKey="TipoAquisicao_ID", IsForeignKey=true)]
		public TipoAquisicao TipoAquisicao
		{
			get
			{
				return this._TipoAquisicao.Entity;
			}
			set
			{
				TipoAquisicao previousValue = this._TipoAquisicao.Entity;
				if (((previousValue != value) 
							|| (this._TipoAquisicao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoAquisicao.Entity = null;
						previousValue.Aquisicaos.Remove(this);
					}
					this._TipoAquisicao.Entity = value;
					if ((value != null))
					{
						value.Aquisicaos.Add(this);
						this._TipoAquisicao_ID = value.TipoAquisicao_ID;
					}
					else
					{
						this._TipoAquisicao_ID = default(int);
					}
					this.SendPropertyChanged("TipoAquisicao");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aluguers(Aluguer entity)
		{
			this.SendPropertyChanging();
			entity.Aquisicao = this;
		}
		
		private void detach_Aluguers(Aluguer entity)
		{
			this.SendPropertyChanging();
			entity.Aquisicao = null;
		}
		
		private void attach_RegistoUtilizacaos(RegistoUtilizacao entity)
		{
			this.SendPropertyChanging();
			entity.Aquisicao = this;
		}
		
		private void detach_RegistoUtilizacaos(RegistoUtilizacao entity)
		{
			this.SendPropertyChanging();
			entity.Aquisicao = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacto")]
	public partial class Contacto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_ID;
		
		private int _TipoContacto_ID;
		
		private string _Contacto1;
		
		private EntityRef<Utilizador> _Utilizador;
		
		private EntityRef<TipoContacto> _TipoContacto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnTipoContacto_IDChanging(int value);
    partial void OnTipoContacto_IDChanged();
    partial void OnContacto1Changing(string value);
    partial void OnContacto1Changed();
    #endregion
		
		public Contacto()
		{
			this._Utilizador = default(EntityRef<Utilizador>);
			this._TipoContacto = default(EntityRef<TipoContacto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoContacto_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TipoContacto_ID
		{
			get
			{
				return this._TipoContacto_ID;
			}
			set
			{
				if ((this._TipoContacto_ID != value))
				{
					if (this._TipoContacto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoContacto_IDChanging(value);
					this.SendPropertyChanging();
					this._TipoContacto_ID = value;
					this.SendPropertyChanged("TipoContacto_ID");
					this.OnTipoContacto_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Contacto", Storage="_Contacto1", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Contacto1
		{
			get
			{
				return this._Contacto1;
			}
			set
			{
				if ((this._Contacto1 != value))
				{
					this.OnContacto1Changing(value);
					this.SendPropertyChanging();
					this._Contacto1 = value;
					this.SendPropertyChanged("Contacto1");
					this.OnContacto1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Contacto", Storage="_Utilizador", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Contactos.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Contactos.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoContacto_Contacto", Storage="_TipoContacto", ThisKey="TipoContacto_ID", OtherKey="TipoContacto_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TipoContacto TipoContacto
		{
			get
			{
				return this._TipoContacto.Entity;
			}
			set
			{
				TipoContacto previousValue = this._TipoContacto.Entity;
				if (((previousValue != value) 
							|| (this._TipoContacto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoContacto.Entity = null;
						previousValue.Contactos.Remove(this);
					}
					this._TipoContacto.Entity = value;
					if ((value != null))
					{
						value.Contactos.Add(this);
						this._TipoContacto_ID = value.TipoContacto_ID;
					}
					else
					{
						this._TipoContacto_ID = default(int);
					}
					this.SendPropertyChanged("TipoContacto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Criadora")]
	public partial class Criadora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Criadora_ID;
		
		private string _Nome;
		
		private int _Pais_ID;
		
		private EntitySet<Jogo> _Jogos;
		
		private EntityRef<Pai> _Pai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCriadora_IDChanging(int value);
    partial void OnCriadora_IDChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnPais_IDChanging(int value);
    partial void OnPais_IDChanged();
    #endregion
		
		public Criadora()
		{
			this._Jogos = new EntitySet<Jogo>(new Action<Jogo>(this.attach_Jogos), new Action<Jogo>(this.detach_Jogos));
			this._Pai = default(EntityRef<Pai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criadora_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Criadora_ID
		{
			get
			{
				return this._Criadora_ID;
			}
			set
			{
				if ((this._Criadora_ID != value))
				{
					this.OnCriadora_IDChanging(value);
					this.SendPropertyChanging();
					this._Criadora_ID = value;
					this.SendPropertyChanged("Criadora_ID");
					this.OnCriadora_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais_ID", DbType="Int NOT NULL")]
		public int Pais_ID
		{
			get
			{
				return this._Pais_ID;
			}
			set
			{
				if ((this._Pais_ID != value))
				{
					if (this._Pai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPais_IDChanging(value);
					this.SendPropertyChanging();
					this._Pais_ID = value;
					this.SendPropertyChanged("Pais_ID");
					this.OnPais_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criadora_Jogo", Storage="_Jogos", ThisKey="Criadora_ID", OtherKey="Criadora_ID")]
		public EntitySet<Jogo> Jogos
		{
			get
			{
				return this._Jogos;
			}
			set
			{
				this._Jogos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Criadora", Storage="_Pai", ThisKey="Pais_ID", OtherKey="Pais_ID", IsForeignKey=true)]
		public Pai Pai
		{
			get
			{
				return this._Pai.Entity;
			}
			set
			{
				Pai previousValue = this._Pai.Entity;
				if (((previousValue != value) 
							|| (this._Pai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pai.Entity = null;
						previousValue.Criadoras.Remove(this);
					}
					this._Pai.Entity = value;
					if ((value != null))
					{
						value.Criadoras.Add(this);
						this._Pais_ID = value.Pais_ID;
					}
					else
					{
						this._Pais_ID = default(int);
					}
					this.SendPropertyChanged("Pai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jogos(Jogo entity)
		{
			this.SendPropertyChanging();
			entity.Criadora = this;
		}
		
		private void detach_Jogos(Jogo entity)
		{
			this.SendPropertyChanging();
			entity.Criadora = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Editora")]
	public partial class Editora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Editora_ID;
		
		private string _Nome;
		
		private int _Pais_ID;
		
		private EntitySet<Jogo> _Jogos;
		
		private EntityRef<Pai> _Pai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEditora_IDChanging(int value);
    partial void OnEditora_IDChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnPais_IDChanging(int value);
    partial void OnPais_IDChanged();
    #endregion
		
		public Editora()
		{
			this._Jogos = new EntitySet<Jogo>(new Action<Jogo>(this.attach_Jogos), new Action<Jogo>(this.detach_Jogos));
			this._Pai = default(EntityRef<Pai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editora_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Editora_ID
		{
			get
			{
				return this._Editora_ID;
			}
			set
			{
				if ((this._Editora_ID != value))
				{
					this.OnEditora_IDChanging(value);
					this.SendPropertyChanging();
					this._Editora_ID = value;
					this.SendPropertyChanged("Editora_ID");
					this.OnEditora_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais_ID", DbType="Int NOT NULL")]
		public int Pais_ID
		{
			get
			{
				return this._Pais_ID;
			}
			set
			{
				if ((this._Pais_ID != value))
				{
					if (this._Pai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPais_IDChanging(value);
					this.SendPropertyChanging();
					this._Pais_ID = value;
					this.SendPropertyChanged("Pais_ID");
					this.OnPais_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Editora_Jogo", Storage="_Jogos", ThisKey="Editora_ID", OtherKey="Editora_ID")]
		public EntitySet<Jogo> Jogos
		{
			get
			{
				return this._Jogos;
			}
			set
			{
				this._Jogos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Editora", Storage="_Pai", ThisKey="Pais_ID", OtherKey="Pais_ID", IsForeignKey=true)]
		public Pai Pai
		{
			get
			{
				return this._Pai.Entity;
			}
			set
			{
				Pai previousValue = this._Pai.Entity;
				if (((previousValue != value) 
							|| (this._Pai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pai.Entity = null;
						previousValue.Editoras.Remove(this);
					}
					this._Pai.Entity = value;
					if ((value != null))
					{
						value.Editoras.Add(this);
						this._Pais_ID = value.Pais_ID;
					}
					else
					{
						this._Pais_ID = default(int);
					}
					this.SendPropertyChanged("Pai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jogos(Jogo entity)
		{
			this.SendPropertyChanging();
			entity.Editora = this;
		}
		
		private void detach_Jogos(Jogo entity)
		{
			this.SendPropertyChanging();
			entity.Editora = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Factura")]
	public partial class Factura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IVA_ID;
		
		private int _Factura_ID;
		
		private System.DateTime _Data;
		
		private EntitySet<Aquisicao> _Aquisicaos;
		
		private EntityRef<IVA> _IVA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIVA_IDChanging(int value);
    partial void OnIVA_IDChanged();
    partial void OnFactura_IDChanging(int value);
    partial void OnFactura_IDChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    #endregion
		
		public Factura()
		{
			this._Aquisicaos = new EntitySet<Aquisicao>(new Action<Aquisicao>(this.attach_Aquisicaos), new Action<Aquisicao>(this.detach_Aquisicaos));
			this._IVA = default(EntityRef<IVA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IVA_ID", DbType="Int NOT NULL")]
		public int IVA_ID
		{
			get
			{
				return this._IVA_ID;
			}
			set
			{
				if ((this._IVA_ID != value))
				{
					if (this._IVA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIVA_IDChanging(value);
					this.SendPropertyChanging();
					this._IVA_ID = value;
					this.SendPropertyChanged("IVA_ID");
					this.OnIVA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factura_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Factura_ID
		{
			get
			{
				return this._Factura_ID;
			}
			set
			{
				if ((this._Factura_ID != value))
				{
					this.OnFactura_IDChanging(value);
					this.SendPropertyChanging();
					this._Factura_ID = value;
					this.SendPropertyChanged("Factura_ID");
					this.OnFactura_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="DateTime NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Aquisicao", Storage="_Aquisicaos", ThisKey="Factura_ID", OtherKey="Factura_ID")]
		public EntitySet<Aquisicao> Aquisicaos
		{
			get
			{
				return this._Aquisicaos;
			}
			set
			{
				this._Aquisicaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IVA_Factura", Storage="_IVA", ThisKey="IVA_ID", OtherKey="IVA_ID", IsForeignKey=true)]
		public IVA IVA
		{
			get
			{
				return this._IVA.Entity;
			}
			set
			{
				IVA previousValue = this._IVA.Entity;
				if (((previousValue != value) 
							|| (this._IVA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IVA.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._IVA.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._IVA_ID = value.IVA_ID;
					}
					else
					{
						this._IVA_ID = default(int);
					}
					this.SendPropertyChanged("IVA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aquisicaos(Aquisicao entity)
		{
			this.SendPropertyChanging();
			entity.Factura = this;
		}
		
		private void detach_Aquisicaos(Aquisicao entity)
		{
			this.SendPropertyChanging();
			entity.Factura = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Genero")]
	public partial class Genero : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Genero_ID;
		
		private string _Genero1;
		
		private EntitySet<Jogo> _Jogos;
		
		private EntitySet<Preferencia> _Preferencias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenero_IDChanging(int value);
    partial void OnGenero_IDChanged();
    partial void OnGenero1Changing(string value);
    partial void OnGenero1Changed();
    #endregion
		
		public Genero()
		{
			this._Jogos = new EntitySet<Jogo>(new Action<Jogo>(this.attach_Jogos), new Action<Jogo>(this.detach_Jogos));
			this._Preferencias = new EntitySet<Preferencia>(new Action<Preferencia>(this.attach_Preferencias), new Action<Preferencia>(this.detach_Preferencias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genero_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Genero_ID
		{
			get
			{
				return this._Genero_ID;
			}
			set
			{
				if ((this._Genero_ID != value))
				{
					this.OnGenero_IDChanging(value);
					this.SendPropertyChanging();
					this._Genero_ID = value;
					this.SendPropertyChanged("Genero_ID");
					this.OnGenero_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Genero", Storage="_Genero1", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Genero1
		{
			get
			{
				return this._Genero1;
			}
			set
			{
				if ((this._Genero1 != value))
				{
					this.OnGenero1Changing(value);
					this.SendPropertyChanging();
					this._Genero1 = value;
					this.SendPropertyChanged("Genero1");
					this.OnGenero1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genero_Jogo", Storage="_Jogos", ThisKey="Genero_ID", OtherKey="Genero_ID")]
		public EntitySet<Jogo> Jogos
		{
			get
			{
				return this._Jogos;
			}
			set
			{
				this._Jogos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genero_Preferencia", Storage="_Preferencias", ThisKey="Genero_ID", OtherKey="Genero_ID")]
		public EntitySet<Preferencia> Preferencias
		{
			get
			{
				return this._Preferencias;
			}
			set
			{
				this._Preferencias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jogos(Jogo entity)
		{
			this.SendPropertyChanging();
			entity.Genero = this;
		}
		
		private void detach_Jogos(Jogo entity)
		{
			this.SendPropertyChanging();
			entity.Genero = null;
		}
		
		private void attach_Preferencias(Preferencia entity)
		{
			this.SendPropertyChanging();
			entity.Genero = this;
		}
		
		private void detach_Preferencias(Preferencia entity)
		{
			this.SendPropertyChanging();
			entity.Genero = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Idioma")]
	public partial class Idioma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Idioma_ID;
		
		private string _Idioma1;
		
		private EntitySet<IdiomaJogo> _IdiomaJogos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdioma_IDChanging(int value);
    partial void OnIdioma_IDChanged();
    partial void OnIdioma1Changing(string value);
    partial void OnIdioma1Changed();
    #endregion
		
		public Idioma()
		{
			this._IdiomaJogos = new EntitySet<IdiomaJogo>(new Action<IdiomaJogo>(this.attach_IdiomaJogos), new Action<IdiomaJogo>(this.detach_IdiomaJogos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idioma_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Idioma_ID
		{
			get
			{
				return this._Idioma_ID;
			}
			set
			{
				if ((this._Idioma_ID != value))
				{
					this.OnIdioma_IDChanging(value);
					this.SendPropertyChanging();
					this._Idioma_ID = value;
					this.SendPropertyChanged("Idioma_ID");
					this.OnIdioma_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Idioma", Storage="_Idioma1", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Idioma1
		{
			get
			{
				return this._Idioma1;
			}
			set
			{
				if ((this._Idioma1 != value))
				{
					this.OnIdioma1Changing(value);
					this.SendPropertyChanging();
					this._Idioma1 = value;
					this.SendPropertyChanged("Idioma1");
					this.OnIdioma1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idioma_IdiomaJogo", Storage="_IdiomaJogos", ThisKey="Idioma_ID", OtherKey="Idioma_ID")]
		public EntitySet<IdiomaJogo> IdiomaJogos
		{
			get
			{
				return this._IdiomaJogos;
			}
			set
			{
				this._IdiomaJogos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IdiomaJogos(IdiomaJogo entity)
		{
			this.SendPropertyChanging();
			entity.Idioma = this;
		}
		
		private void detach_IdiomaJogos(IdiomaJogo entity)
		{
			this.SendPropertyChanging();
			entity.Idioma = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IdiomaJogo")]
	public partial class IdiomaJogo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Idioma_ID;
		
		private int _Jogo_ID;
		
		private EntityRef<Idioma> _Idioma;
		
		private EntityRef<Jogo> _Jogo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdioma_IDChanging(int value);
    partial void OnIdioma_IDChanged();
    partial void OnJogo_IDChanging(int value);
    partial void OnJogo_IDChanged();
    #endregion
		
		public IdiomaJogo()
		{
			this._Idioma = default(EntityRef<Idioma>);
			this._Jogo = default(EntityRef<Jogo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idioma_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Idioma_ID
		{
			get
			{
				return this._Idioma_ID;
			}
			set
			{
				if ((this._Idioma_ID != value))
				{
					if (this._Idioma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdioma_IDChanging(value);
					this.SendPropertyChanging();
					this._Idioma_ID = value;
					this.SendPropertyChanged("Idioma_ID");
					this.OnIdioma_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jogo_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Jogo_ID
		{
			get
			{
				return this._Jogo_ID;
			}
			set
			{
				if ((this._Jogo_ID != value))
				{
					if (this._Jogo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJogo_IDChanging(value);
					this.SendPropertyChanging();
					this._Jogo_ID = value;
					this.SendPropertyChanged("Jogo_ID");
					this.OnJogo_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idioma_IdiomaJogo", Storage="_Idioma", ThisKey="Idioma_ID", OtherKey="Idioma_ID", IsForeignKey=true)]
		public Idioma Idioma
		{
			get
			{
				return this._Idioma.Entity;
			}
			set
			{
				Idioma previousValue = this._Idioma.Entity;
				if (((previousValue != value) 
							|| (this._Idioma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Idioma.Entity = null;
						previousValue.IdiomaJogos.Remove(this);
					}
					this._Idioma.Entity = value;
					if ((value != null))
					{
						value.IdiomaJogos.Add(this);
						this._Idioma_ID = value.Idioma_ID;
					}
					else
					{
						this._Idioma_ID = default(int);
					}
					this.SendPropertyChanged("Idioma");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jogo_IdiomaJogo", Storage="_Jogo", ThisKey="Jogo_ID", OtherKey="Jogo_ID", IsForeignKey=true)]
		public Jogo Jogo
		{
			get
			{
				return this._Jogo.Entity;
			}
			set
			{
				Jogo previousValue = this._Jogo.Entity;
				if (((previousValue != value) 
							|| (this._Jogo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jogo.Entity = null;
						previousValue.IdiomaJogos.Remove(this);
					}
					this._Jogo.Entity = value;
					if ((value != null))
					{
						value.IdiomaJogos.Add(this);
						this._Jogo_ID = value.Jogo_ID;
					}
					else
					{
						this._Jogo_ID = default(int);
					}
					this.SendPropertyChanged("Jogo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Imagem")]
	public partial class Imagem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Imagem_ID;
		
		private string _Endereco;
		
		private int _Jogo_ID;
		
		private EntityRef<Jogo> _Jogo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImagem_IDChanging(int value);
    partial void OnImagem_IDChanged();
    partial void OnEnderecoChanging(string value);
    partial void OnEnderecoChanged();
    partial void OnJogo_IDChanging(int value);
    partial void OnJogo_IDChanged();
    #endregion
		
		public Imagem()
		{
			this._Jogo = default(EntityRef<Jogo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imagem_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Imagem_ID
		{
			get
			{
				return this._Imagem_ID;
			}
			set
			{
				if ((this._Imagem_ID != value))
				{
					this.OnImagem_IDChanging(value);
					this.SendPropertyChanging();
					this._Imagem_ID = value;
					this.SendPropertyChanged("Imagem_ID");
					this.OnImagem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Endereco", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Endereco
		{
			get
			{
				return this._Endereco;
			}
			set
			{
				if ((this._Endereco != value))
				{
					this.OnEnderecoChanging(value);
					this.SendPropertyChanging();
					this._Endereco = value;
					this.SendPropertyChanged("Endereco");
					this.OnEnderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jogo_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Jogo_ID
		{
			get
			{
				return this._Jogo_ID;
			}
			set
			{
				if ((this._Jogo_ID != value))
				{
					if (this._Jogo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJogo_IDChanging(value);
					this.SendPropertyChanging();
					this._Jogo_ID = value;
					this.SendPropertyChanged("Jogo_ID");
					this.OnJogo_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jogo_Imagem", Storage="_Jogo", ThisKey="Jogo_ID", OtherKey="Jogo_ID", IsForeignKey=true)]
		public Jogo Jogo
		{
			get
			{
				return this._Jogo.Entity;
			}
			set
			{
				Jogo previousValue = this._Jogo.Entity;
				if (((previousValue != value) 
							|| (this._Jogo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jogo.Entity = null;
						previousValue.Imagems.Remove(this);
					}
					this._Jogo.Entity = value;
					if ((value != null))
					{
						value.Imagems.Add(this);
						this._Jogo_ID = value.Jogo_ID;
					}
					else
					{
						this._Jogo_ID = default(int);
					}
					this.SendPropertyChanged("Jogo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IVA")]
	public partial class IVA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IVA_ID;
		
		private double _Valor;
		
		private System.DateTime _Data_Inicio;
		
		private EntitySet<Factura> _Facturas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIVA_IDChanging(int value);
    partial void OnIVA_IDChanged();
    partial void OnValorChanging(double value);
    partial void OnValorChanged();
    partial void OnData_InicioChanging(System.DateTime value);
    partial void OnData_InicioChanged();
    #endregion
		
		public IVA()
		{
			this._Facturas = new EntitySet<Factura>(new Action<Factura>(this.attach_Facturas), new Action<Factura>(this.detach_Facturas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IVA_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IVA_ID
		{
			get
			{
				return this._IVA_ID;
			}
			set
			{
				if ((this._IVA_ID != value))
				{
					this.OnIVA_IDChanging(value);
					this.SendPropertyChanging();
					this._IVA_ID = value;
					this.SendPropertyChanged("IVA_ID");
					this.OnIVA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Float NOT NULL")]
		public double Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Inicio", DbType="Date NOT NULL")]
		public System.DateTime Data_Inicio
		{
			get
			{
				return this._Data_Inicio;
			}
			set
			{
				if ((this._Data_Inicio != value))
				{
					this.OnData_InicioChanging(value);
					this.SendPropertyChanging();
					this._Data_Inicio = value;
					this.SendPropertyChanged("Data_Inicio");
					this.OnData_InicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IVA_Factura", Storage="_Facturas", ThisKey="IVA_ID", OtherKey="IVA_ID")]
		public EntitySet<Factura> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.IVA = this;
		}
		
		private void detach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.IVA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jogo")]
	public partial class Jogo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Jogo_ID;
		
		private string _Nome;
		
		private System.DateTime _Data_Lancamento;
		
		private string _Descricao;
		
		private double _Preco_Base;
		
		private double _Taxa_Aluguer;
		
		private int _Rate_ID;
		
		private int _Editora_ID;
		
		private int _Criadora_ID;
		
		private int _Genero_ID;
		
		private string _Capa_Endereco;
		
		private EntitySet<Aquisicao> _Aquisicaos;
		
		private EntitySet<IdiomaJogo> _IdiomaJogos;
		
		private EntitySet<Imagem> _Imagems;
		
		private EntityRef<Criadora> _Criadora;
		
		private EntityRef<Editora> _Editora;
		
		private EntityRef<Genero> _Genero;
		
		private EntityRef<Rate> _Rate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJogo_IDChanging(int value);
    partial void OnJogo_IDChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnData_LancamentoChanging(System.DateTime value);
    partial void OnData_LancamentoChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnPreco_BaseChanging(double value);
    partial void OnPreco_BaseChanged();
    partial void OnTaxa_AluguerChanging(double value);
    partial void OnTaxa_AluguerChanged();
    partial void OnRate_IDChanging(int value);
    partial void OnRate_IDChanged();
    partial void OnEditora_IDChanging(int value);
    partial void OnEditora_IDChanged();
    partial void OnCriadora_IDChanging(int value);
    partial void OnCriadora_IDChanged();
    partial void OnGenero_IDChanging(int value);
    partial void OnGenero_IDChanged();
    partial void OnCapa_EnderecoChanging(string value);
    partial void OnCapa_EnderecoChanged();
    #endregion
		
		public Jogo()
		{
			this._Aquisicaos = new EntitySet<Aquisicao>(new Action<Aquisicao>(this.attach_Aquisicaos), new Action<Aquisicao>(this.detach_Aquisicaos));
			this._IdiomaJogos = new EntitySet<IdiomaJogo>(new Action<IdiomaJogo>(this.attach_IdiomaJogos), new Action<IdiomaJogo>(this.detach_IdiomaJogos));
			this._Imagems = new EntitySet<Imagem>(new Action<Imagem>(this.attach_Imagems), new Action<Imagem>(this.detach_Imagems));
			this._Criadora = default(EntityRef<Criadora>);
			this._Editora = default(EntityRef<Editora>);
			this._Genero = default(EntityRef<Genero>);
			this._Rate = default(EntityRef<Rate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jogo_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Jogo_ID
		{
			get
			{
				return this._Jogo_ID;
			}
			set
			{
				if ((this._Jogo_ID != value))
				{
					this.OnJogo_IDChanging(value);
					this.SendPropertyChanging();
					this._Jogo_ID = value;
					this.SendPropertyChanged("Jogo_ID");
					this.OnJogo_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data_Lancamento", DbType="Date NOT NULL")]
		public System.DateTime Data_Lancamento
		{
			get
			{
				return this._Data_Lancamento;
			}
			set
			{
				if ((this._Data_Lancamento != value))
				{
					this.OnData_LancamentoChanging(value);
					this.SendPropertyChanging();
					this._Data_Lancamento = value;
					this.SendPropertyChanged("Data_Lancamento");
					this.OnData_LancamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco_Base", DbType="Float NOT NULL")]
		public double Preco_Base
		{
			get
			{
				return this._Preco_Base;
			}
			set
			{
				if ((this._Preco_Base != value))
				{
					this.OnPreco_BaseChanging(value);
					this.SendPropertyChanging();
					this._Preco_Base = value;
					this.SendPropertyChanged("Preco_Base");
					this.OnPreco_BaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taxa_Aluguer", DbType="Float NOT NULL")]
		public double Taxa_Aluguer
		{
			get
			{
				return this._Taxa_Aluguer;
			}
			set
			{
				if ((this._Taxa_Aluguer != value))
				{
					this.OnTaxa_AluguerChanging(value);
					this.SendPropertyChanging();
					this._Taxa_Aluguer = value;
					this.SendPropertyChanged("Taxa_Aluguer");
					this.OnTaxa_AluguerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate_ID", DbType="Int NOT NULL")]
		public int Rate_ID
		{
			get
			{
				return this._Rate_ID;
			}
			set
			{
				if ((this._Rate_ID != value))
				{
					if (this._Rate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRate_IDChanging(value);
					this.SendPropertyChanging();
					this._Rate_ID = value;
					this.SendPropertyChanged("Rate_ID");
					this.OnRate_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editora_ID", DbType="Int NOT NULL")]
		public int Editora_ID
		{
			get
			{
				return this._Editora_ID;
			}
			set
			{
				if ((this._Editora_ID != value))
				{
					if (this._Editora.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEditora_IDChanging(value);
					this.SendPropertyChanging();
					this._Editora_ID = value;
					this.SendPropertyChanged("Editora_ID");
					this.OnEditora_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criadora_ID", DbType="Int NOT NULL")]
		public int Criadora_ID
		{
			get
			{
				return this._Criadora_ID;
			}
			set
			{
				if ((this._Criadora_ID != value))
				{
					if (this._Criadora.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCriadora_IDChanging(value);
					this.SendPropertyChanging();
					this._Criadora_ID = value;
					this.SendPropertyChanged("Criadora_ID");
					this.OnCriadora_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genero_ID", DbType="Int NOT NULL")]
		public int Genero_ID
		{
			get
			{
				return this._Genero_ID;
			}
			set
			{
				if ((this._Genero_ID != value))
				{
					if (this._Genero.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenero_IDChanging(value);
					this.SendPropertyChanging();
					this._Genero_ID = value;
					this.SendPropertyChanged("Genero_ID");
					this.OnGenero_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capa_Endereco", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Capa_Endereco
		{
			get
			{
				return this._Capa_Endereco;
			}
			set
			{
				if ((this._Capa_Endereco != value))
				{
					this.OnCapa_EnderecoChanging(value);
					this.SendPropertyChanging();
					this._Capa_Endereco = value;
					this.SendPropertyChanged("Capa_Endereco");
					this.OnCapa_EnderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jogo_Aquisicao", Storage="_Aquisicaos", ThisKey="Jogo_ID", OtherKey="Jogo_ID")]
		public EntitySet<Aquisicao> Aquisicaos
		{
			get
			{
				return this._Aquisicaos;
			}
			set
			{
				this._Aquisicaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jogo_IdiomaJogo", Storage="_IdiomaJogos", ThisKey="Jogo_ID", OtherKey="Jogo_ID")]
		public EntitySet<IdiomaJogo> IdiomaJogos
		{
			get
			{
				return this._IdiomaJogos;
			}
			set
			{
				this._IdiomaJogos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jogo_Imagem", Storage="_Imagems", ThisKey="Jogo_ID", OtherKey="Jogo_ID")]
		public EntitySet<Imagem> Imagems
		{
			get
			{
				return this._Imagems;
			}
			set
			{
				this._Imagems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criadora_Jogo", Storage="_Criadora", ThisKey="Criadora_ID", OtherKey="Criadora_ID", IsForeignKey=true)]
		public Criadora Criadora
		{
			get
			{
				return this._Criadora.Entity;
			}
			set
			{
				Criadora previousValue = this._Criadora.Entity;
				if (((previousValue != value) 
							|| (this._Criadora.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Criadora.Entity = null;
						previousValue.Jogos.Remove(this);
					}
					this._Criadora.Entity = value;
					if ((value != null))
					{
						value.Jogos.Add(this);
						this._Criadora_ID = value.Criadora_ID;
					}
					else
					{
						this._Criadora_ID = default(int);
					}
					this.SendPropertyChanged("Criadora");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Editora_Jogo", Storage="_Editora", ThisKey="Editora_ID", OtherKey="Editora_ID", IsForeignKey=true)]
		public Editora Editora
		{
			get
			{
				return this._Editora.Entity;
			}
			set
			{
				Editora previousValue = this._Editora.Entity;
				if (((previousValue != value) 
							|| (this._Editora.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Editora.Entity = null;
						previousValue.Jogos.Remove(this);
					}
					this._Editora.Entity = value;
					if ((value != null))
					{
						value.Jogos.Add(this);
						this._Editora_ID = value.Editora_ID;
					}
					else
					{
						this._Editora_ID = default(int);
					}
					this.SendPropertyChanged("Editora");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genero_Jogo", Storage="_Genero", ThisKey="Genero_ID", OtherKey="Genero_ID", IsForeignKey=true)]
		public Genero Genero
		{
			get
			{
				return this._Genero.Entity;
			}
			set
			{
				Genero previousValue = this._Genero.Entity;
				if (((previousValue != value) 
							|| (this._Genero.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Genero.Entity = null;
						previousValue.Jogos.Remove(this);
					}
					this._Genero.Entity = value;
					if ((value != null))
					{
						value.Jogos.Add(this);
						this._Genero_ID = value.Genero_ID;
					}
					else
					{
						this._Genero_ID = default(int);
					}
					this.SendPropertyChanged("Genero");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rate_Jogo", Storage="_Rate", ThisKey="Rate_ID", OtherKey="Rate_ID", IsForeignKey=true)]
		public Rate Rate
		{
			get
			{
				return this._Rate.Entity;
			}
			set
			{
				Rate previousValue = this._Rate.Entity;
				if (((previousValue != value) 
							|| (this._Rate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rate.Entity = null;
						previousValue.Jogos.Remove(this);
					}
					this._Rate.Entity = value;
					if ((value != null))
					{
						value.Jogos.Add(this);
						this._Rate_ID = value.Rate_ID;
					}
					else
					{
						this._Rate_ID = default(int);
					}
					this.SendPropertyChanged("Rate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aquisicaos(Aquisicao entity)
		{
			this.SendPropertyChanging();
			entity.Jogo = this;
		}
		
		private void detach_Aquisicaos(Aquisicao entity)
		{
			this.SendPropertyChanging();
			entity.Jogo = null;
		}
		
		private void attach_IdiomaJogos(IdiomaJogo entity)
		{
			this.SendPropertyChanging();
			entity.Jogo = this;
		}
		
		private void detach_IdiomaJogos(IdiomaJogo entity)
		{
			this.SendPropertyChanging();
			entity.Jogo = null;
		}
		
		private void attach_Imagems(Imagem entity)
		{
			this.SendPropertyChanging();
			entity.Jogo = this;
		}
		
		private void detach_Imagems(Imagem entity)
		{
			this.SendPropertyChanging();
			entity.Jogo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pais")]
	public partial class Pai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pais_ID;
		
		private string _Nome;
		
		private EntitySet<Utilizador> _Utilizadors;
		
		private EntitySet<Criadora> _Criadoras;
		
		private EntitySet<Editora> _Editoras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPais_IDChanging(int value);
    partial void OnPais_IDChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public Pai()
		{
			this._Utilizadors = new EntitySet<Utilizador>(new Action<Utilizador>(this.attach_Utilizadors), new Action<Utilizador>(this.detach_Utilizadors));
			this._Criadoras = new EntitySet<Criadora>(new Action<Criadora>(this.attach_Criadoras), new Action<Criadora>(this.detach_Criadoras));
			this._Editoras = new EntitySet<Editora>(new Action<Editora>(this.attach_Editoras), new Action<Editora>(this.detach_Editoras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Pais_ID
		{
			get
			{
				return this._Pais_ID;
			}
			set
			{
				if ((this._Pais_ID != value))
				{
					this.OnPais_IDChanging(value);
					this.SendPropertyChanging();
					this._Pais_ID = value;
					this.SendPropertyChanged("Pais_ID");
					this.OnPais_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Utilizador", Storage="_Utilizadors", ThisKey="Pais_ID", OtherKey="Pais_ID")]
		public EntitySet<Utilizador> Utilizadors
		{
			get
			{
				return this._Utilizadors;
			}
			set
			{
				this._Utilizadors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Criadora", Storage="_Criadoras", ThisKey="Pais_ID", OtherKey="Pais_ID")]
		public EntitySet<Criadora> Criadoras
		{
			get
			{
				return this._Criadoras;
			}
			set
			{
				this._Criadoras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Editora", Storage="_Editoras", ThisKey="Pais_ID", OtherKey="Pais_ID")]
		public EntitySet<Editora> Editoras
		{
			get
			{
				return this._Editoras;
			}
			set
			{
				this._Editoras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Utilizadors(Utilizador entity)
		{
			this.SendPropertyChanging();
			entity.Pai = this;
		}
		
		private void detach_Utilizadors(Utilizador entity)
		{
			this.SendPropertyChanging();
			entity.Pai = null;
		}
		
		private void attach_Criadoras(Criadora entity)
		{
			this.SendPropertyChanging();
			entity.Pai = this;
		}
		
		private void detach_Criadoras(Criadora entity)
		{
			this.SendPropertyChanging();
			entity.Pai = null;
		}
		
		private void attach_Editoras(Editora entity)
		{
			this.SendPropertyChanging();
			entity.Pai = this;
		}
		
		private void detach_Editoras(Editora entity)
		{
			this.SendPropertyChanging();
			entity.Pai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Preferencia")]
	public partial class Preferencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_ID;
		
		private int _Genero_ID;
		
		private EntityRef<Genero> _Genero;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnGenero_IDChanging(int value);
    partial void OnGenero_IDChanged();
    #endregion
		
		public Preferencia()
		{
			this._Genero = default(EntityRef<Genero>);
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genero_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Genero_ID
		{
			get
			{
				return this._Genero_ID;
			}
			set
			{
				if ((this._Genero_ID != value))
				{
					if (this._Genero.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenero_IDChanging(value);
					this.SendPropertyChanging();
					this._Genero_ID = value;
					this.SendPropertyChanged("Genero_ID");
					this.OnGenero_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genero_Preferencia", Storage="_Genero", ThisKey="Genero_ID", OtherKey="Genero_ID", IsForeignKey=true)]
		public Genero Genero
		{
			get
			{
				return this._Genero.Entity;
			}
			set
			{
				Genero previousValue = this._Genero.Entity;
				if (((previousValue != value) 
							|| (this._Genero.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Genero.Entity = null;
						previousValue.Preferencias.Remove(this);
					}
					this._Genero.Entity = value;
					if ((value != null))
					{
						value.Preferencias.Add(this);
						this._Genero_ID = value.Genero_ID;
					}
					else
					{
						this._Genero_ID = default(int);
					}
					this.SendPropertyChanged("Genero");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Preferencia", Storage="_Utilizador", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Preferencias.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Preferencias.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rate")]
	public partial class Rate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Rate_ID;
		
		private string _Descricao;
		
		private int _Idade_Min;
		
		private int _Idade_Max;
		
		private EntitySet<Jogo> _Jogos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRate_IDChanging(int value);
    partial void OnRate_IDChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnIdade_MinChanging(int value);
    partial void OnIdade_MinChanged();
    partial void OnIdade_MaxChanging(int value);
    partial void OnIdade_MaxChanged();
    #endregion
		
		public Rate()
		{
			this._Jogos = new EntitySet<Jogo>(new Action<Jogo>(this.attach_Jogos), new Action<Jogo>(this.detach_Jogos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Rate_ID
		{
			get
			{
				return this._Rate_ID;
			}
			set
			{
				if ((this._Rate_ID != value))
				{
					this.OnRate_IDChanging(value);
					this.SendPropertyChanging();
					this._Rate_ID = value;
					this.SendPropertyChanged("Rate_ID");
					this.OnRate_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idade_Min", DbType="Int NOT NULL")]
		public int Idade_Min
		{
			get
			{
				return this._Idade_Min;
			}
			set
			{
				if ((this._Idade_Min != value))
				{
					this.OnIdade_MinChanging(value);
					this.SendPropertyChanging();
					this._Idade_Min = value;
					this.SendPropertyChanged("Idade_Min");
					this.OnIdade_MinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idade_Max", DbType="Int NOT NULL")]
		public int Idade_Max
		{
			get
			{
				return this._Idade_Max;
			}
			set
			{
				if ((this._Idade_Max != value))
				{
					this.OnIdade_MaxChanging(value);
					this.SendPropertyChanging();
					this._Idade_Max = value;
					this.SendPropertyChanged("Idade_Max");
					this.OnIdade_MaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rate_Jogo", Storage="_Jogos", ThisKey="Rate_ID", OtherKey="Rate_ID")]
		public EntitySet<Jogo> Jogos
		{
			get
			{
				return this._Jogos;
			}
			set
			{
				this._Jogos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jogos(Jogo entity)
		{
			this.SendPropertyChanging();
			entity.Rate = this;
		}
		
		private void detach_Jogos(Jogo entity)
		{
			this.SendPropertyChanging();
			entity.Rate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegistoUtilizacao")]
	public partial class RegistoUtilizacao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegistoUtilizacao_ID;
		
		private System.DateTime _DataInicio;
		
		private System.DateTime _DataFim;
		
		private int _Aquisicao_ID;
		
		private EntityRef<Aquisicao> _Aquisicao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegistoUtilizacao_IDChanging(int value);
    partial void OnRegistoUtilizacao_IDChanged();
    partial void OnDataInicioChanging(System.DateTime value);
    partial void OnDataInicioChanged();
    partial void OnDataFimChanging(System.DateTime value);
    partial void OnDataFimChanged();
    partial void OnAquisicao_IDChanging(int value);
    partial void OnAquisicao_IDChanged();
    #endregion
		
		public RegistoUtilizacao()
		{
			this._Aquisicao = default(EntityRef<Aquisicao>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistoUtilizacao_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RegistoUtilizacao_ID
		{
			get
			{
				return this._RegistoUtilizacao_ID;
			}
			set
			{
				if ((this._RegistoUtilizacao_ID != value))
				{
					this.OnRegistoUtilizacao_IDChanging(value);
					this.SendPropertyChanging();
					this._RegistoUtilizacao_ID = value;
					this.SendPropertyChanged("RegistoUtilizacao_ID");
					this.OnRegistoUtilizacao_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInicio", DbType="DateTime NOT NULL")]
		public System.DateTime DataInicio
		{
			get
			{
				return this._DataInicio;
			}
			set
			{
				if ((this._DataInicio != value))
				{
					this.OnDataInicioChanging(value);
					this.SendPropertyChanging();
					this._DataInicio = value;
					this.SendPropertyChanged("DataInicio");
					this.OnDataInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFim", DbType="DateTime NOT NULL")]
		public System.DateTime DataFim
		{
			get
			{
				return this._DataFim;
			}
			set
			{
				if ((this._DataFim != value))
				{
					this.OnDataFimChanging(value);
					this.SendPropertyChanging();
					this._DataFim = value;
					this.SendPropertyChanged("DataFim");
					this.OnDataFimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aquisicao_ID", DbType="Int NOT NULL")]
		public int Aquisicao_ID
		{
			get
			{
				return this._Aquisicao_ID;
			}
			set
			{
				if ((this._Aquisicao_ID != value))
				{
					if (this._Aquisicao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAquisicao_IDChanging(value);
					this.SendPropertyChanging();
					this._Aquisicao_ID = value;
					this.SendPropertyChanged("Aquisicao_ID");
					this.OnAquisicao_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aquisicao_RegistoUtilizacao", Storage="_Aquisicao", ThisKey="Aquisicao_ID", OtherKey="Aquisicao_ID", IsForeignKey=true)]
		public Aquisicao Aquisicao
		{
			get
			{
				return this._Aquisicao.Entity;
			}
			set
			{
				Aquisicao previousValue = this._Aquisicao.Entity;
				if (((previousValue != value) 
							|| (this._Aquisicao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aquisicao.Entity = null;
						previousValue.RegistoUtilizacaos.Remove(this);
					}
					this._Aquisicao.Entity = value;
					if ((value != null))
					{
						value.RegistoUtilizacaos.Add(this);
						this._Aquisicao_ID = value.Aquisicao_ID;
					}
					else
					{
						this._Aquisicao_ID = default(int);
					}
					this.SendPropertyChanged("Aquisicao");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoAquisicao")]
	public partial class TipoAquisicao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TipoAquisicao_ID;
		
		private string _Tipo;
		
		private EntitySet<Aquisicao> _Aquisicaos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTipoAquisicao_IDChanging(int value);
    partial void OnTipoAquisicao_IDChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    #endregion
		
		public TipoAquisicao()
		{
			this._Aquisicaos = new EntitySet<Aquisicao>(new Action<Aquisicao>(this.attach_Aquisicaos), new Action<Aquisicao>(this.detach_Aquisicaos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoAquisicao_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TipoAquisicao_ID
		{
			get
			{
				return this._TipoAquisicao_ID;
			}
			set
			{
				if ((this._TipoAquisicao_ID != value))
				{
					this.OnTipoAquisicao_IDChanging(value);
					this.SendPropertyChanging();
					this._TipoAquisicao_ID = value;
					this.SendPropertyChanged("TipoAquisicao_ID");
					this.OnTipoAquisicao_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAquisicao_Aquisicao", Storage="_Aquisicaos", ThisKey="TipoAquisicao_ID", OtherKey="TipoAquisicao_ID")]
		public EntitySet<Aquisicao> Aquisicaos
		{
			get
			{
				return this._Aquisicaos;
			}
			set
			{
				this._Aquisicaos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aquisicaos(Aquisicao entity)
		{
			this.SendPropertyChanging();
			entity.TipoAquisicao = this;
		}
		
		private void detach_Aquisicaos(Aquisicao entity)
		{
			this.SendPropertyChanging();
			entity.TipoAquisicao = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoContacto")]
	public partial class TipoContacto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TipoContacto_ID;
		
		private string _Descricao;
		
		private EntitySet<Contacto> _Contactos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTipoContacto_IDChanging(int value);
    partial void OnTipoContacto_IDChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public TipoContacto()
		{
			this._Contactos = new EntitySet<Contacto>(new Action<Contacto>(this.attach_Contactos), new Action<Contacto>(this.detach_Contactos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoContacto_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TipoContacto_ID
		{
			get
			{
				return this._TipoContacto_ID;
			}
			set
			{
				if ((this._TipoContacto_ID != value))
				{
					this.OnTipoContacto_IDChanging(value);
					this.SendPropertyChanging();
					this._TipoContacto_ID = value;
					this.SendPropertyChanged("TipoContacto_ID");
					this.OnTipoContacto_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoContacto_Contacto", Storage="_Contactos", ThisKey="TipoContacto_ID", OtherKey="TipoContacto_ID")]
		public EntitySet<Contacto> Contactos
		{
			get
			{
				return this._Contactos;
			}
			set
			{
				this._Contactos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contactos(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.TipoContacto = this;
		}
		
		private void detach_Contactos(Contacto entity)
		{
			this.SendPropertyChanging();
			entity.TipoContacto = null;
		}
	}
}
#pragma warning restore 1591
